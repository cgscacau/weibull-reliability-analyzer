"""
Weibull Reliability Analyzer
Aplicativo para an√°lise de confiabilidade usando distribui√ß√£o de Weibull
"""
import streamlit as st
import sys
import os
import numpy as np

# Adiciona o diret√≥rio raiz ao path
sys.path.insert(0, os.path.abspath(os.path.dirname(__file__)))

from config.settings import APP_CONFIG, TOOLTIPS
from modules.data_handler.file_uploader import FileUploader
from modules.data_handler.data_validator import DataValidator
from modules.data_handler.data_processor import DataProcessor
from modules.analysis.weibull_analysis import WeibullAnalysis
from modules.analysis.reliability_metrics import ReliabilityMetrics
from modules.analysis.statistical_tests import StatisticalTests
from utils.helpers import init_session_state, format_number
from utils.constants import TIME_UNITS

# Configura√ß√£o da p√°gina
st.set_page_config(**APP_CONFIG)

# Inicializa√ß√£o do session state
init_session_state("data", None)
init_session_state("filename", None)
init_session_state("data_status", "not_loaded")
init_session_state("validation_results", None)
init_session_state("processed_data", None)
init_session_state("analysis_results", None)

# T√≠tulo principal
st.title("üìä Weibull Reliability Analyzer")
st.markdown("### An√°lise de Confiabilidade para Frotas e Equipamentos")

# Sidebar
with st.sidebar:
    st.markdown("### üéØ Navega√ß√£o")
    st.markdown("""
    - üìä **An√°lise Principal**: Upload e an√°lise de dados
    - üìö **Tutorial**: Aprenda a usar o aplicativo
    - üìñ **Teoria Weibull**: Fundamentos te√≥ricos
    - ‚ùì **FAQ**: Perguntas frequentes
    - üìù **Guia**: Como preparar seus dados
    """)
    st.markdown("---")
    st.markdown("### ‚ÑπÔ∏è Sobre")
    st.markdown("""
    **Vers√£o:** 1.0.0  
    **Desenvolvido para:** An√°lise de confiabilidade industrial
    """)

# Conte√∫do principal
st.markdown("""
Bem-vindo ao **Weibull Reliability Analyzer**! Este aplicativo permite realizar an√°lises 
completas de confiabilidade utilizando a distribui√ß√£o de Weibull.

**Funcionalidades principais:**
- Upload de dados em m√∫ltiplos formatos (CSV, Excel)
- An√°lise estat√≠stica completa com distribui√ß√£o de Weibull
- Visualiza√ß√µes interativas e intuitivas
- C√°lculo de m√©tricas de confiabilidade (MTBF, taxa de falha, etc.)
- Exporta√ß√£o de relat√≥rios e gr√°ficos
""")

st.markdown("---")

# ETAPA 1: Upload de arquivo
st.header("1Ô∏è‚É£ Upload de Dados")
uploader = FileUploader()
result = uploader.upload_file()

if result is not None:
    df, filename = result
    st.session_state["data"] = df
    st.session_state["filename"] = filename
    st.session_state["data_status"] = "loaded"
    
    # Informa√ß√µes sobre os dados
    col1, col2, col3 = st.columns(3)
    with col1:
        st.metric("üìù Total de Registros", len(df))
    with col2:
        st.metric("üìä N√∫mero de Colunas", len(df.columns))
    with col3:
        st.metric("üìÅ Arquivo", filename)

# ETAPA 2: Valida√ß√£o de dados
if st.session_state["data"] is not None:
    st.markdown("---")
    st.header("2Ô∏è‚É£ Valida√ß√£o de Dados")
    
    if st.button("üîç Validar Dados", type="primary"):
        with st.spinner("Validando dados..."):
            validator = DataValidator(st.session_state["data"])
            validation_results = validator.validate()
            st.session_state["validation_results"] = validation_results
            
            # Exibe resultados
            is_valid = validator.display_validation_results()
            
            if is_valid:
                st.session_state["data_status"] = "validated"

# ETAPA 3: Processamento de dados
if st.session_state.get("validation_results") and st.session_state["validation_results"]["is_valid"]:
    st.markdown("---")
    st.header("3Ô∏è‚É£ Processamento de Dados")
    
    col1, col2 = st.columns(2)
    
    with col1:
        time_unit = st.selectbox(
            "Unidade de Tempo",
            options=list(TIME_UNITS.keys()),
            format_func=lambda x: TIME_UNITS[x],
            help="Selecione a unidade de tempo dos seus dados"
        )
    
    with col2:
        remove_outliers = st.checkbox(
            "Remover Outliers",
            value=False,
            help="Remove valores extremos que podem afetar a an√°lise"
        )
    
    if st.button("‚öôÔ∏è Processar Dados", type="primary"):
        with st.spinner("Processando dados..."):
            validation_results = st.session_state["validation_results"]
            processor = DataProcessor(
                st.session_state["data"],
                validation_results["column_mapping"]
            )
            
            processed_df = processor.process(
                time_unit=TIME_UNITS[time_unit],
                remove_outliers=remove_outliers
            )
            
            st.session_state["processed_data"] = processed_df
            st.session_state["data_status"] = "processed"
            
            # Exibe dados processados
            processor.display_processed_data()
            
            st.success("‚úÖ Dados processados com sucesso! Pronto para an√°lise.")

# ETAPA 4: An√°lise de Weibull
if st.session_state.get("processed_data") is not None:
    st.markdown("---")
    st.header("4Ô∏è‚É£ An√°lise de Weibull")
    
    col1, col2 = st.columns(2)
    
    with col1:
        method = st.selectbox(
            "M√©todo de Estima√ß√£o",
            options=["mle", "rr"],
            format_func=lambda x: "Maximum Likelihood (MLE)" if x == "mle" else "Rank Regression (RR)",
            help="MLE √© geralmente mais preciso, mas RR √© mais r√°pido"
        )
    
    with col2:
        confidence_level = st.slider(
            "N√≠vel de Confian√ßa",
            min_value=0.80,
            max_value=0.99,
            value=0.95,
            step=0.01,
            format="%.2f",
            help="N√≠vel de confian√ßa para intervalos"
        )
    
    if st.button("üìà Executar An√°lise de Weibull", type="primary"):
        with st.spinner("Executando an√°lise de Weibull..."):
            # An√°lise de Weibull
            weibull = WeibullAnalysis(st.session_state["processed_data"])
            results = weibull.fit(method=method, confidence_level=confidence_level)
            
            # M√©tricas de confiabilidade
            metrics_calc = ReliabilityMetrics(weibull)
            metrics = metrics_calc.calculate_all_metrics()
            
            # Testes estat√≠sticos
            tests = StatisticalTests(weibull)
            test_results = tests.run_all_tests()
            
            # Interpreta√ß√£o
            interpretation = weibull.get_interpretation()
            
            # Armazena resultados
            st.session_state["analysis_results"] = {
                "weibull": results,
                "metrics": metrics,
                "tests": test_results,
                "interpretation": interpretation,
                "weibull_obj": weibull,
                "metrics_obj": metrics_calc
            }
            
            st.session_state["data_status"] = "analyzed"
            
            # EXIBE RESULTADOS
            st.success("‚úÖ An√°lise conclu√≠da com sucesso!")
            
            # Par√¢metros de Weibull
            st.subheader("üìä Par√¢metros de Weibull")
            
            col1, col2 = st.columns(2)
            
            with col1:
                st.metric(
                    label="Œ≤ (Beta) - Par√¢metro de Forma",
                    value=f"{results['beta']:.4f}",
                    help=TOOLTIPS["beta"]
                )
                st.caption(f"IC {confidence_level*100:.0f}%: [{results['beta_ci'][0]:.4f}, {results['beta_ci'][1]:.4f}]")
            
            with col2:
                st.metric(
                    label=f"Œ∑ (Eta) - Par√¢metro de Escala ({results['time_unit']})",
                    value=f"{results['eta']:.2f}",
                    help=TOOLTIPS["eta"]
                )
                st.caption(f"IC {confidence_level*100:.0f}%: [{results['eta_ci'][0]:.2f}, {results['eta_ci'][1]:.2f}]")
            
            # Interpreta√ß√£o
            st.markdown("---")
            st.subheader("üîç Interpreta√ß√£o dos Resultados")
            
            st.info(f"""
            **Modo de Falha:** {interpretation['failure_mode']}
            
            **Comportamento:** {interpretation['behavior']}
            
            **Recomenda√ß√£o:** {interpretation['recommendation']}
            
            **Valor de Œ≤:** {interpretation['beta_value']}
            """)
            
            # M√©tricas de Confiabilidade
            st.markdown("---")
            st.subheader("üìà M√©tricas de Confiabilidade")
            
            col1, col2, col3, col4 = st.columns(4)
            
            with col1:
                st.metric(
                    "MTTF",
                    format_number(metrics["mttf"], 2, results['time_unit']),
                    help=TOOLTIPS["mtbf"]
                )
            
            with col2:
                st.metric(
                    "Vida Mediana",
                    format_number(metrics["median_life"], 2, results['time_unit']),
                    help="Tempo em que 50% das unidades falharam"
                )
            
            with col3:
                st.metric(
                    "B10 Life",
                    format_number(metrics["b10_life"], 2, results['time_unit']),
                    help="Tempo em que 10% das unidades falharam"
                )
            
            with col4:
                st.metric(
                    "Vida Caracter√≠stica",
                    format_number(metrics["characteristic_life"], 2, results['time_unit']),
                    help="Tempo em que 63.2% das unidades falharam (Œ∑)"
                )
            
            # Testes Estat√≠sticos
            st.markdown("---")
            st.subheader("üß™ Testes de Adequa√ß√£o")
            
            # R¬≤
            r2_result = test_results["r_squared"]
            st.metric(
                "Coeficiente de Determina√ß√£o (R¬≤)",
                f"{r2_result['r_squared']:.4f}",
                delta=r2_result['quality'],
                help="Mede a qualidade do ajuste da distribui√ß√£o aos dados"
            )
            st.caption(r2_result['interpretation'])
            
            # Anderson-Darling
            ad_result = test_results["anderson_darling"]
            col1, col2 = st.columns(2)
            
            with col1:
                st.write("**Teste Anderson-Darling**")
                st.write(f"Estat√≠stica: {ad_result['statistic']:.4f}")
                st.write(f"Valor Cr√≠tico: {ad_result['critical_value']:.4f}")
                if ad_result['passed']:
                    st.success("‚úÖ " + ad_result['interpretation'])
                else:
                    st.warning("‚ö†Ô∏è " + ad_result['interpretation'])
            
            # Kolmogorov-Smirnov
            ks_result = test_results["kolmogorov_smirnov"]
            with col2:
                st.write("**Teste Kolmogorov-Smirnov**")
                st.write(f"Estat√≠stica: {ks_result['statistic']:.4f}")
                st.write(f"P-valor: {ks_result['p_value']:.4f}")
                if ks_result['passed']:
                    st.success("‚úÖ " + ks_result['interpretation'])
                else:
                    st.warning("‚ö†Ô∏è " + ks_result['interpretation'])

# ETAPA 5: Visualiza√ß√µes
if st.session_state.get("analysis_results") is not None:
    st.markdown("---")
    st.header("5Ô∏è‚É£ Visualiza√ß√µes")
    
    analysis_results = st.session_state["analysis_results"]
    weibull_obj = analysis_results["weibull_obj"]
    metrics_obj = analysis_results["metrics_obj"]
    
    # Importa classes de visualiza√ß√£o
    from modules.visualization.weibull_plots import WeibullPlots
    from modules.visualization.reliability_plots import ReliabilityPlots
    
    # Cria objetos de visualiza√ß√£o
    weibull_plots = WeibullPlots(weibull_obj, metrics_obj)
    reliability_plots = ReliabilityPlots(weibull_obj, metrics_obj)
    
    # Tabs para diferentes visualiza√ß√µes
    tab1, tab2, tab3, tab4 = st.tabs([
        "üìä Gr√°ficos Principais",
        "üìà An√°lise Detalhada", 
        "üìâ M√©tricas",
        "üîç An√°lise Completa"
    ])
    
    with tab1:
        st.subheader("Gr√°ficos Principais de Weibull")
        
        col1, col2 = st.columns(2)
        
        with col1:
            st.plotly_chart(
                weibull_plots.probability_plot(),
                use_container_width=True,
                key="prob_plot"
            )
        
        with col2:
            st.plotly_chart(
                weibull_plots.reliability_vs_time(),
                use_container_width=True,
                key="reliability_plot"
            )
    
    with tab2:
        st.subheader("An√°lise Detalhada")
        
        col1, col2 = st.columns(2)
        
        with col1:
            st.plotly_chart(
                weibull_plots.hazard_rate_plot(),
                use_container_width=True,
                key="hazard_plot"
            )
        
        with col2:
            st.plotly_chart(
                reliability_plots.failure_distribution_histogram(),
                use_container_width=True,
                key="histogram_plot"
            )
        
        st.plotly_chart(
            weibull_plots.pdf_cdf_plot(),
            use_container_width=True,
            key="pdf_cdf_plot"
        )
    
    with tab3:
        st.subheader("M√©tricas Visuais")
        
        col1, col2 = st.columns(2)
        
        with col1:
            st.plotly_chart(
                reliability_plots.b_life_chart(),
                use_container_width=True,
                key="blife_chart"
            )
        
        with col2:
            st.plotly_chart(
                reliability_plots.metrics_comparison(),
                use_container_width=True,
                key="metrics_comparison"
            )
    
    with tab4:
        st.subheader("Vis√£o Geral Completa")
        st.plotly_chart(
            weibull_plots.combined_analysis_plot(),
            use_container_width=True,
            key="combined_plot"
        )
        
        # Calculadora interativa
        st.markdown("---")
        st.subheader("üßÆ Calculadora de Confiabilidade")
        
        col1, col2 = st.columns(2)
        
        with col1:
            calc_time = st.number_input(
                f"Tempo para an√°lise ({analysis_results['weibull']['time_unit']})",
                min_value=0.0,
                value=float(analysis_results['metrics']['median_life']),
                step=10.0
            )
        
        with col2:
            if st.button("üîÑ Calcular M√©tricas", type="primary"):
                metrics_at_time = metrics_obj.reliability_at_time(calc_time)
                
                st.markdown("#### Resultados:")
                col_a, col_b = st.columns(2)
                
                with col_a:
                    st.metric(
                        "Confiabilidade",
                        f"{metrics_at_time['reliability']*100:.2f}%",
                        help="Probabilidade de funcionar at√© este tempo"
                    )
                    st.metric(
                        "PDF",
                        f"{metrics_at_time['pdf']:.6f}",
                        help="Densidade de probabilidade neste tempo"
                    )
                
                with col_b:
                    st.metric(
                        "N√£o-Confiabilidade",
                        f"{metrics_at_time['unreliability']*100:.2f}%",
                        help="Probabilidade de falhar at√© este tempo"
                    )
                    st.metric(
                        "Taxa de Falha",
                        f"{metrics_at_time['hazard_rate']:.6f}",
                        help="Taxa instant√¢nea de falha neste tempo"
                    )



# Mensagem inicial
if st.session_state["data"] is None:
    st.info("üëÜ Fa√ßa o upload de um arquivo para come√ßar a an√°lise.")

# Footer
st.markdown("---")
st.markdown("""
<div style='text-align: center; color: #666;'>
    <small>Weibull Reliability Analyzer ¬© 2025 | Desenvolvido com Streamlit</small>
</div>
""", unsafe_allow_html=True)
